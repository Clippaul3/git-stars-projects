{"version":3,"sources":["pages/popular/index.jsx","pages/battle/index.jsx","pages/result/index.jsx","App.jsx","serviceWorker.js","index.js","logo.svg"],"names":["Popular","state","projects","language","page","isLoading","isSwitching","handle","console","log","refs","isReachBottom","clientHeight","document","documentElement","scrollTop","onPullUpHeight","documentHeight","documentTop","setState","loadData","axios","get","then","res","data","items","moreProjects","concat","switchLanguage","this","addEventListener","bind","className","ref","spinning","size","tip","onClick","map","project","index","key","src","owner","avatar_url","name","icon","faUser","faStar","stargazers_count","faShareSquare","forks_count","faComment","open_issues_count","Component","Battle","player1","player2","isPlayerOneShowed","isPlayerTwoShowed","isPlayerOneLoading","isPlayerTwoLoading","playerOneResult","playerTwoResult","handlePlayerChange","player","e","input1","value","target","input2","doSearch","catch","err","message","error","doClear","doBattle","followers1","followers2","props","history","push","pathname","faUsers","faFighterJet","faTrophy","placeholder","type","onChange","onSubmit","disabled","login","followers","Result","winner","loser","doReset","location","App","to","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c016c652.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUser, faStar, faCopy, faShareSquare, faComment} from '@fortawesome/free-regular-svg-icons'\r\nclass Popular extends Component {\r\n\r\n    state = {\r\n        projects: [],\r\n        language: '',\r\n        page: 1,\r\n        isLoading: true,\r\n        isSwitching:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.isReachBottom.addEventListener('mousewheel', this.handle.bind(this))\r\n        this.loadData()\r\n    }\r\n\r\n    handle = () => {\r\n        console.log(\"数据的高\", this.refs.isReachBottom.clientHeight);\r\n        console.log(\"滚动的高\", document.documentElement.scrollTop);\r\n        console.log(\"屏幕的高\", document.documentElement.clientHeight);\r\n        let {page, isLoading} = this.state\r\n        let onPullUpHeight = this.refs.isReachBottom.clientHeight;\r\n        let documentHeight = document.documentElement.clientHeight;\r\n        let documentTop = document.documentElement.scrollTop;\r\n        if ((documentHeight > onPullUpHeight || onPullUpHeight <= documentHeight + documentTop) && !isLoading) {\r\n            page++\r\n            this.setState({page}, () => {\r\n                this.loadData()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    loadData = () => {\r\n        let {language, page} = this.state\r\n        this.setState({isLoading: true}, () => {\r\n            axios.get(\r\n                `https://api.github.com/search/repositories?q=stars:%3E1+language:${language}&sort=stars&order=desc&type=Repositories&page=${page}`\r\n            ).then((res) => {\r\n                console.log(res.data.items)\r\n                if (page == 1) {\r\n                    this.setState({projects: res.data.items, isLoading: false,isSwitching:false})\r\n                } else {\r\n                    let moreProjects = this.state.projects.concat(res.data.items)\r\n                    this.setState({projects: moreProjects, isLoading: false,isSwitching:false})\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    switchLanguage = (language) => {\r\n        this.setState({language, page: 1,isSwitching:true}, () => {\r\n            this.loadData()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {projects, language, isLoading,isSwitching} = this.state\r\n        return (\r\n            <div className=\"git-stars\" ref={'isReachBottom'}>\r\n                {\r\n                    isSwitching &&\r\n                    <div className={'switch-container'}>\r\n                        <Spin spinning={isLoading} size={\"large\"} tip={'加载中...'}/>\r\n                    </div>\r\n                }\r\n                <div className={'git-stars-languages'}>\r\n                    <div className={`git-stars-languages-item ${language == '' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, '')}>\r\n                        All\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'javascript' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'javascript')}>\r\n                        javascript\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'ruby' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'ruby')}>\r\n                        ruby\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'java' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'java')}>\r\n                        java\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'css' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'css')}>\r\n                        css\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'python' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'python')}>\r\n                        python\r\n                    </div>\r\n                </div>\r\n                <div className={'git-stars-body'}>\r\n                    {\r\n                        projects.map((project, index) => (\r\n                            <div key={index} className={'git-stars-item'}>\r\n                                <div className={'git-stars-item-no'}>#{index}</div>\r\n                                <div className={'git-stars-logo'}>\r\n                                    <img className={'git-stars-img'} src={project.owner.avatar_url}/>\r\n                                </div>\r\n                                <div className={'git-stars-name'}>{project.name}</div>\r\n                                <div className={'git-stars-info'}>\r\n                                    <div className={'git-stars-info-name'}>\r\n                                        <FontAwesomeIcon className={'icon'} icon={faUser}/>\r\n                                        {project.name}\r\n                                    </div>\r\n                                    <div className={'git-stars-star-count'}>\r\n                                        <FontAwesomeIcon className={'icon'} icon={faStar}/>\r\n                                        {project.stargazers_count}\r\n                                    </div>\r\n                                    <div className={'git-stars-forks'}>\r\n                                        <FontAwesomeIcon className={'icon'} icon={faShareSquare}/>\r\n                                        {project.forks_count}\r\n                                    </div>\r\n                                    <div className={'git-stars-issues'}>\r\n                                        <FontAwesomeIcon className={'icon'} icon={faComment}/>\r\n                                        {project.open_issues_count}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className={'spin-container'}>\r\n                        <Spin spinning={isLoading} size={\"large\"} tip={'加载中...'}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Popular;\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert, Input,message} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {} from '@fortawesome/free-regular-svg-icons'\r\nimport {faFighterJet, faTrophy, faUsers} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Battle extends Component {\r\n\r\n    state = {\r\n        player1: '',\r\n        player2: '',\r\n        isPlayerOneShowed: false,\r\n        isPlayerTwoShowed: false,\r\n        isPlayerOneLoading: false,\r\n        isPlayerTwoLoading: false,\r\n        playerOneResult: {},\r\n        playerTwoResult: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handlePlayerChange = (player, e) => {\r\n        if (player == 'player1') {\r\n            this.refs.input1.value = e.target.value\r\n            this.setState({[player]: e.target.value})\r\n        } else if (player == 'player2') {\r\n            this.refs.input2.value = e.target.value\r\n            this.setState({[player]: e.target.value})\r\n        }\r\n    }\r\n\r\n    doSearch = (player) => {\r\n        let {player1, player2, isPlayerOneLoading, isPlayerTwoLoading} = this.state\r\n        if (player == 'player1' && player1 && !isPlayerOneLoading) {\r\n            this.setState({isPlayerOneLoading: true}, () => {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        playerOneResult: res.data,\r\n                        isPlayerOneLoading: false,\r\n                        isPlayerOneShowed: true\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    message.error('抱歉，这个找不到')\r\n                    this.setState({isPlayerOneLoading: false,player1: ''})\r\n                })\r\n            })\r\n        } else if (player == 'player2' && player2 && !isPlayerTwoLoading) {\r\n            this.setState({isPlayerTwoLoading: true}, () => {\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        playerTwoResult: res.data,\r\n                        isPlayerTwoLoading: false,\r\n                        isPlayerTwoShowed: true\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    message.error('抱歉，这个找不到')\r\n                    this.setState({isPlayerTwoLoading: false,player2: ''})\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    doClear = (player) => {\r\n        this.setState({[player]: ''})\r\n        if (player == 'player1') {\r\n            this.setState({isPlayerOneShowed: false, playerOneResult: {}})\r\n        } else if (player == 'player2') {\r\n            this.setState({isPlayerTwoShowed: false, playerTwoResult: {}})\r\n        }\r\n    }\r\n\r\n    doBattle = (player1, player2, followers1, followers2) => {\r\n        this.props.history.push({\r\n            pathname: `/result/?player1=${player1}&player2=${player2}`,\r\n            state: {\r\n                player1, player2, followers1, followers2\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let {\r\n            player1, player2,\r\n            isPlayerOneLoading,\r\n            isPlayerOneShowed,\r\n            isPlayerTwoLoading,\r\n            isPlayerTwoShowed,\r\n            playerOneResult,\r\n            playerTwoResult\r\n        } = this.state\r\n        console.log('res', playerOneResult)\r\n        return (\r\n            <div className=\"battle\">\r\n                <div className={'battle-title'}>\r\n                    Instructions\r\n                </div>\r\n                <div className={'battle-items'}>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>Enter two Github</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faUsers} className={'users-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>Battle</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faFighterJet} className={'jet-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>See The Winner</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faTrophy} className={'trophy-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'battle-input'}>\r\n                    <div className={'battle-input-player'}>\r\n                        <div className={'battle-input-player-title'}>\r\n                            Player One\r\n                        </div>\r\n                        <form>\r\n                            {\r\n                                !isPlayerOneShowed && !isPlayerOneLoading &&\r\n                                <div className={'battle-input-player-area'}>\r\n                                    <input className={'input-item'} placeholder={'github username'}\r\n                                           type={\"text\"} ref={'input1'}\r\n                                           value={player1} onChange={this.handlePlayerChange.bind(this, 'player1')}\r\n                                           onSubmit={this.doSearch.bind(this, 'player1', true)}/>\r\n                                    <button onClick={this.doSearch.bind(this, 'player1')}\r\n                                            disabled={!player1}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerOneLoading &&\r\n                                <div className={'loading'}>\r\n                                    loading......\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerOneShowed &&\r\n                                <div className={'battle-input-result'}>\r\n                                    <img className={'battle-input-result-image'} src={playerOneResult.avatar_url}/>\r\n                                    <div className={'battle-input-result-name'}>\r\n                                        {playerOneResult.login}\r\n                                    </div>\r\n                                    <div\r\n                                        className={'battle-input-result-clear'}\r\n                                        onClick={this.doClear.bind(this, 'player1')}>\r\n                                        X\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                    <div className={'battle-input-player'}>\r\n                        <div className={'battle-input-player-title'}>\r\n                            Player Two\r\n                        </div>\r\n                        <form>\r\n                            {\r\n                                !isPlayerTwoShowed && !isPlayerTwoLoading &&\r\n                                <div className={'battle-input-player-area'}>\r\n                                    <input className={'input-item'} placeholder={'github username'}\r\n                                           type={\"text\"} ref={'input2'}\r\n                                           value={player2} onChange={this.handlePlayerChange.bind(this, 'player2')}\r\n                                           onSubmit={this.doSearch.bind(this, 'player2')}/>\r\n                                    <button onClick={this.doSearch.bind(this, 'player2')}\r\n                                            disabled={!player2}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerTwoLoading &&\r\n                                <div className={'loading'}>\r\n                                    loading......\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerTwoShowed &&\r\n                                <div className={'battle-input-result'}>\r\n                                    <img className={'battle-input-result-image'} src={playerTwoResult.avatar_url}/>\r\n                                    <div className={'battle-input-result-name'}>\r\n                                        {playerTwoResult.login}\r\n                                    </div>\r\n                                    <div className={'battle-input-result-clear'}\r\n                                         onClick={this.doClear.bind(this, 'player2')}>\r\n                                        X\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className={'battle-begin'}>\r\n                    {\r\n                        isPlayerOneShowed && isPlayerTwoShowed &&\r\n                        <button\r\n                            onClick={\r\n                                this.doBattle.bind(this, player1, player2, playerOneResult.followers, playerTwoResult.followers)\r\n                            }>\r\n                            BATTLE\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Battle;\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert, Input} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {} from '@fortawesome/free-regular-svg-icons'\r\nimport {faFighterJet, faTrophy, faUsers} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Result extends Component {\r\n\r\n    state = {\r\n        player1: '',\r\n        player2: '',\r\n        winner: {},\r\n        loser: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('哎', this)\r\n        if (this.props.history.location.state) {\r\n            let {player1, player2, followers1, followers2} = this.props.history.location.state\r\n            if (followers1 >= followers2) {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        winner: res.data\r\n                    })\r\n                })\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        loser: res.data\r\n                    })\r\n                })\r\n            } else {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        loser: res.data\r\n                    })\r\n                })\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        winner: res.data\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            this.props.history.push({\r\n                pathname: '/battle'\r\n            })\r\n        }\r\n    }\r\n\r\n    doReset = () => {\r\n        this.setState({player1: '', player2: '', winner: {}, loser: {}}, () => {\r\n            this.props.history.push('/battle')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {winner, loser} = this.state\r\n        console.log('winner', winner)\r\n        console.log('loser', loser)\r\n        return (\r\n            <div className=\"result\">\r\n                <div className={'result-players'}>\r\n                    <div className={'result-player'}>\r\n                        <div className={'result-player-title'}>\r\n                            Winner\r\n                        </div>\r\n                        <div className={'result-player-avatar'}>\r\n                            {\r\n                                winner &&\r\n                                <img src={winner.avatar_url}/>\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-name'}>\r\n                            {\r\n                                winner && winner.login\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-score'}>\r\n                            score:1\r\n                        </div>\r\n                    </div>\r\n                    <div className={'result-player'}>\r\n                        <div className={'result-player-title'}>\r\n                            Loser\r\n                        </div>\r\n                        <div className={'result-player-avatar'}>\r\n                            {\r\n                                loser &&\r\n                                <img src={loser.avatar_url}/>\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-name'}>\r\n                            {\r\n                                loser && loser.login\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-score'}>\r\n                            score:0\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'reset'} onClick={this.doReset}>\r\n                    Reset\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport axios from 'axios'\nimport Popular from \"./pages/popular\";\nimport Battle from \"./pages/battle\";\nimport Result from \"./pages/result\";\nimport {HashRouter as Router, Route, Redirect, Link, withRouter, Switch} from \"react-router-dom\";\n\nclass App extends Component {\n\n    state = {}\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"git-app\">\n                <Router>\n                    <div className={'links'}>\n                        <Link to={'/popular'} className={`navigate`}>Popular</Link>\n                        <Link to={'/battle'} className={`navigate`}>Battle</Link>\n                    </div>\n                    <Redirect to={'/popular'}/>\n                    <Switch>\n                        <Route path={'/popular'} component={Popular}/>\n                        <Route path={'/battle'} component={Battle}/>\n                        <Route path={'/result'} component={Result}/>\n                    </Switch>\n\n                </Router>\n            </div>\n        )\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Chess is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}