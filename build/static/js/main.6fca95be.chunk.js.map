{"version":3,"sources":["components/language-link/index.jsx","pages/popular/index.jsx","pages/battle/index.jsx","pages/result/index.jsx","App.jsx","serviceWorker.js","index.js","logo.svg"],"names":["LanguageLinnk","state","projects","language","page","isLoading","isSwitching","switchLanguage","setState","props","history","push","pathname","search","window","localStorage","onChange","this","className","ref","onClick","bind","Component","withRouter","Popular","isWrongPage","handle","onPullUpHeight","refs","isReachBottom","clientHeight","documentHeight","document","documentElement","documentTop","scrollTop","loadData","axios","get","then","res","console","log","status","data","items","moreProjects","concat","addEventListener","catch","err","message","errMsg","error","errorInfo","icon","faWindowClose","spinning","size","tip","map","project","index","key","src","owner","avatar_url","name","faUser","faStar","stargazers_count","faShareSquare","forks_count","faComment","open_issues_count","Battle","player1","player2","isPlayerOneShowed","isPlayerTwoShowed","isPlayerOneLoading","isPlayerTwoLoading","playerOneResult","playerTwoResult","isButtonOneDisabled","isButtonTwoDisabled","playerOneNotFound","playerTwoNotFound","handlePlayerChange","player","e","target","value","input1","input2","doSearch","doClear","doBattle","followers1","followers2","storage","faUsers","faFighterJet","faTrophy","placeholder","type","onSubmit","disabled","login","followers","Result","winner","loser","doReset","location","App","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6fca95be.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUser, faStar, faCopy, faShareSquare, faComment} from '@fortawesome/free-regular-svg-icons'\r\nimport {HashRouter as Router, Route, Redirect, Link, withRouter, Switch} from \"react-router-dom\";\r\n\r\nclass LanguageLinnk extends Component {\r\n\r\n    state = {\r\n        projects: [],\r\n        language: '',\r\n        page: 1,\r\n        isLoading: true,\r\n        isSwitching: false\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    switchLanguage = (language) => {\r\n        this.setState({language, isSwitching: true}, () => {\r\n            if (language) {\r\n                this.props.history.push({\r\n                    pathname: '/',\r\n                    search: `?language=${language}`\r\n                })\r\n            } else {\r\n                this.props.history.push({\r\n                    pathname: '/'\r\n                })\r\n            }\r\n            window.localStorage.language = language\r\n            this.props.onChange(language)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {projects, isLoading, isSwitching} = this.state\r\n        let {language} = window.localStorage\r\n        return (\r\n            <div className=\"git-stars\" ref={'isReachBottom'}>\r\n                <div className={'git-stars-languages'}>\r\n                    <div className={`git-stars-languages-item ${!language && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, '')}>\r\n                        All\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'javascript' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'javascript')}>\r\n                        javascript\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'ruby' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'ruby')}>\r\n                        ruby\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'java' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'java')}>\r\n                        java\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'css' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'css')}>\r\n                        css\r\n                    </div>\r\n                    <div className={`git-stars-languages-item ${language == 'python' && 'active'}`}\r\n                         onClick={this.switchLanguage.bind(this, 'python')}>\r\n                        python\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(LanguageLinnk);\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport LanguageLinnk from \"../../components/language-link\";\r\nimport axios from 'axios'\r\nimport {Spin, Alert} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUser, faStar, faCopy, faShareSquare, faComment, faWindowClose} from '@fortawesome/free-regular-svg-icons'\r\n\r\nclass Popular extends Component {\r\n\r\n    state = {\r\n        projects: [],\r\n        language: '',\r\n        page: 1,\r\n        isLoading: false,\r\n        isSwitching: false,\r\n        isWrongPage: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData()\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('错啦');\r\n        console.log(errorInfo, error)\r\n    }\r\n\r\n    handle = () => {\r\n        let {page, isLoading} = this.state\r\n        let onPullUpHeight = this.refs.isReachBottom.clientHeight;\r\n        let documentHeight = document.documentElement.clientHeight;\r\n        let documentTop = document.documentElement.scrollTop;\r\n        if ((documentHeight > onPullUpHeight || onPullUpHeight <= documentHeight + documentTop) && !isLoading) {\r\n            page++\r\n            this.setState({page}, () => {\r\n                this.loadData()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    loadData = () => {\r\n        let {page} = this.state\r\n        let {language} = window.localStorage\r\n\r\n        this.setState({isLoading: true}, () => {\r\n            axios.get(\r\n                `https://api.github.com/search/repositories?q=stars:%3E1+language:${language}&sort=stars&order=desc&type=Repositories&page=${page}`\r\n            ).then((res) => {\r\n                console.log('页面查询结果', res)\r\n                if (res.status != 200) {\r\n                    this.setState({isLoading: false, isSwitching: false, isWrongPage: true})\r\n                } else {\r\n                    if (page == 1) {\r\n                        this.setState({\r\n                            projects: res.data.items,\r\n                            isLoading: false,\r\n                            isSwitching: false,\r\n                            isWrongPage: false\r\n                        })\r\n                    } else {\r\n                        let moreProjects = this.state.projects.concat(res.data.items)\r\n                        this.setState({\r\n                            projects: moreProjects,\r\n                            isLoading: false,\r\n                            isSwitching: false,\r\n                            isWrongPage: false\r\n                        })\r\n                    }\r\n                }\r\n                if(this.refs.isReachBottom){\r\n                    this.refs.isReachBottom.addEventListener('mousewheel', this.handle.bind(this))\r\n                }\r\n            }).catch(err => {\r\n                console.log('错误信息',err,typeof err.message)\r\n                this.setState({isWrongPage: true,isLoading:false,isSwitching: false,errMsg:err.message})\r\n            })\r\n        })\r\n    }\r\n\r\n    switchLanguage = (language) => {\r\n        let {isSwitching} = this.state\r\n        if (!isSwitching) {\r\n            this.setState({language, page: 1, isSwitching: true}, () => {\r\n                this.loadData()\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {projects, language, isLoading, isSwitching, isWrongPage} = this.state\r\n        return (\r\n            <div>\r\n                {\r\n                    isWrongPage ?\r\n                        <div className={'wrong-page'}>\r\n                            <div>\r\n                                <FontAwesomeIcon className={'wrong-page-icon'} icon={faWindowClose}/>\r\n                            </div>\r\n                            <div className={'wrong-page-content'}>\r\n                                页面错误，请<a onClick={this.loadData.bind(this)}>刷新</a>重试\r\n                            </div>\r\n                            <div>\r\n                                错误信息:\r\n                            </div>\r\n                            <div>\r\n                                {this.state.errMsg}\r\n                            </div>\r\n                            <div className={'spin-container'}>\r\n                                <Spin spinning={isLoading} size={\"large\"} tip={'加载中...'}/>\r\n                            </div>\r\n                        </div> :\r\n                        <div className=\"git-stars\" ref={'isReachBottom'}>\r\n                            {\r\n                                isSwitching &&\r\n                                <div className={'switch-container'}>\r\n                                    <Spin spinning={isLoading} size={\"large\"} tip={'加载中...'}/>\r\n                                </div>\r\n                            }\r\n                            <LanguageLinnk onChange={this.switchLanguage.bind(this)}/>\r\n                            <div className={'git-stars-body'}>\r\n                                {\r\n                                    projects.map((project, index) => (\r\n                                        <div key={index} className={'git-stars-item'}>\r\n                                            <div className={'git-stars-item-no'}>#{index}</div>\r\n                                            <div className={'git-stars-logo'}>\r\n                                                <img className={'git-stars-img'} src={project.owner.avatar_url}/>\r\n                                            </div>\r\n                                            <div className={'git-stars-name'}>{project.name}</div>\r\n                                            <div className={'git-stars-info'}>\r\n                                                <div className={'git-stars-info-name'}>\r\n                                                    <FontAwesomeIcon className={'icon'} icon={faUser}/>\r\n                                                    {project.name}\r\n                                                </div>\r\n                                                <div className={'git-stars-star-count'}>\r\n                                                    <FontAwesomeIcon className={'icon'} icon={faStar}/>\r\n                                                    {project.stargazers_count}\r\n                                                </div>\r\n                                                <div className={'git-stars-forks'}>\r\n                                                    <FontAwesomeIcon className={'icon'} icon={faShareSquare}/>\r\n                                                    {project.forks_count}\r\n                                                </div>\r\n                                                <div className={'git-stars-issues'}>\r\n                                                    <FontAwesomeIcon className={'icon'} icon={faComment}/>\r\n                                                    {project.open_issues_count}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                <div className={'spin-container'}>\r\n                                    <Spin spinning={isLoading} size={\"large\"} tip={'加载中...'}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Popular;\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert, Input, message} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {} from '@fortawesome/free-regular-svg-icons'\r\nimport {faFighterJet, faTrophy, faUsers} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Battle extends Component {\r\n\r\n    state = {\r\n        player1: '',\r\n        player2: '',\r\n        isPlayerOneShowed: false,\r\n        isPlayerTwoShowed: false,\r\n        isPlayerOneLoading: false,\r\n        isPlayerTwoLoading: false,\r\n        playerOneResult: {},\r\n        playerTwoResult: {},\r\n        isButtonOneDisabled: true,\r\n        isButtonTwoDisabled: true,\r\n        playerOneNotFound: false,\r\n        playerTwoNotFound: false\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handlePlayerChange = (player, e) => {\r\n        if (player == 'player1') {\r\n            if (e.target.value) {\r\n                this.setState({isButtonOneDisabled: false})\r\n            } else {\r\n                this.setState({isButtonOneDisabled: true})\r\n            }\r\n            this.refs.input1.value = e.target.value\r\n            this.setState({[player]: e.target.value})\r\n        } else if (player == 'player2') {\r\n            if (e.target.value) {\r\n                this.setState({isButtonTwoDisabled: false})\r\n            } else {\r\n                this.setState({isButtonTwoDisabled: true})\r\n            }\r\n            this.refs.input2.value = e.target.value\r\n            this.setState({[player]: e.target.value})\r\n        }\r\n    }\r\n\r\n    doSearch = (player) => {\r\n        let {player1, player2, isPlayerOneLoading, isPlayerTwoLoading} = this.state\r\n        if (player == 'player1' && player1 && !isPlayerOneLoading) {\r\n            this.setState({isPlayerOneLoading: true}, () => {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        playerOneResult: res.data,\r\n                        isPlayerOneLoading: false,\r\n                        isPlayerOneShowed: true,\r\n                        playerOneNotFound: false\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    this.setState({\r\n                        isPlayerOneLoading: false,\r\n                        player1: '',\r\n                        isButtonOneDisabled: true,\r\n                        playerOneNotFound: true\r\n                    })\r\n                })\r\n            })\r\n        } else if (player == 'player2' && player2 && !isPlayerTwoLoading) {\r\n            this.setState({isPlayerTwoLoading: true}, () => {\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        playerTwoResult: res.data,\r\n                        isPlayerTwoLoading: false,\r\n                        isPlayerTwoShowed: true,\r\n                        playerTwoNotFound: false\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    this.setState({\r\n                        isPlayerTwoLoading: false,\r\n                        player2: '',\r\n                        isButtonTwoDisabled: true,\r\n                        playerTwoNotFound: true\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            console.log('空 ')\r\n            message.error('空')\r\n        }\r\n    }\r\n\r\n    doClear = (player) => {\r\n        this.setState({[player]: ''})\r\n        if (player == 'player1') {\r\n            this.setState({isPlayerOneShowed: false, playerOneResult: {}, isButtonOneDisabled: true})\r\n        } else if (player == 'player2') {\r\n            this.setState({isPlayerTwoShowed: false, playerTwoResult: {}, isButtonTwoDisabled: true})\r\n        }\r\n    }\r\n\r\n    doBattle = (player1, player2, followers1, followers2) => {\r\n        let storage = window.localStorage\r\n        storage.player1 = player1\r\n        storage.player2 = player2\r\n        storage.followers1 = followers1\r\n        storage.followers2 = followers2\r\n        this.props.history.push({\r\n            pathname: `/result`,\r\n            state: {\r\n                player1, player2, followers1, followers2\r\n            },\r\n            search: `?player1=${player1}&player2=${player2}`\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let {\r\n            player1, player2,\r\n            isPlayerOneLoading,\r\n            isPlayerOneShowed,\r\n            isPlayerTwoLoading,\r\n            isPlayerTwoShowed,\r\n            playerOneResult,\r\n            playerTwoResult,\r\n            isButtonOneDisabled,\r\n            isButtonTwoDisabled,\r\n            playerOneNotFound,\r\n            playerTwoNotFound\r\n        } = this.state\r\n        console.log('res', playerOneResult)\r\n        return (\r\n            <div className=\"battle\">\r\n                <div className={'battle-title'}>\r\n                    Instructions\r\n                </div>\r\n                <div className={'battle-items'}>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>Enter two Github</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faUsers} className={'users-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>Battle</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faFighterJet} className={'jet-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'battle-item'}>\r\n                        <div className={'battle-item-title'}>See The Winner</div>\r\n                        <div className={'battle-item-icon'}>\r\n                            <FontAwesomeIcon icon={faTrophy} className={'trophy-icon'}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'battle-input'}>\r\n                    <div className={'battle-input-player'}>\r\n                        <div className={'battle-input-player-title'}>\r\n                            Player One\r\n                        </div>\r\n                        <form>\r\n                            {\r\n                                !isPlayerOneShowed && !isPlayerOneLoading &&\r\n                                <div className={'battle-input-player-area'}>\r\n                                    <input className={`input-item ${playerOneNotFound && 'not-found-input'}`}\r\n                                           placeholder={'github username'}\r\n                                           type={\"text\"} ref={'input1'}\r\n                                           value={player1} onChange={this.handlePlayerChange.bind(this, 'player1')}\r\n                                           onSubmit={this.doSearch.bind(this, 'player1')}/>\r\n                                    <button onClick={this.doSearch.bind(this, 'player1')}\r\n                                            disabled={isButtonOneDisabled}\r\n                                            className={`submit ${isButtonOneDisabled ? 'disabled' : ''}`}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (playerOneNotFound && !isPlayerOneLoading) &&\r\n                                <div className={'not-found'}>抱歉，无法找到该用户</div>\r\n                            }\r\n                            {\r\n                                isPlayerOneLoading &&\r\n                                <div className={'loading'}>\r\n                                    loading......\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerOneShowed &&\r\n                                <div className={'battle-input-result'}>\r\n                                    <img className={'battle-input-result-image'} src={playerOneResult.avatar_url}/>\r\n                                    <div className={'battle-input-result-name'}>\r\n                                        {playerOneResult.login}\r\n                                    </div>\r\n                                    <div\r\n                                        className={'battle-input-result-clear'}\r\n                                        onClick={this.doClear.bind(this, 'player1')}>\r\n                                        X\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                    <div className={'battle-input-player'}>\r\n                        <div className={'battle-input-player-title'}>\r\n                            Player Two\r\n                        </div>\r\n                        <form>\r\n                            {\r\n                                !isPlayerTwoShowed && !isPlayerTwoLoading &&\r\n                                <div className={'battle-input-player-area'}>\r\n                                    <input className={`input-item ${playerTwoNotFound && 'not-found-input'}`}\r\n                                           placeholder={'github username'}\r\n                                           type={\"text\"} ref={'input2'}\r\n                                           value={player2} onChange={this.handlePlayerChange.bind(this, 'player2')}\r\n                                           onSubmit={this.doSearch.bind(this, 'player2')}/>\r\n                                    <button onClick={this.doSearch.bind(this, 'player2')}\r\n                                            disabled={isButtonTwoDisabled}\r\n                                            className={`submit ${isButtonTwoDisabled ? 'disabled' : ''}`}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (playerTwoNotFound && !isPlayerTwoLoading) &&\r\n                                <div className={'not-found'}>抱歉，无法找到该用户</div>\r\n                            }\r\n                            {\r\n                                isPlayerTwoLoading &&\r\n                                <div className={'loading'}>\r\n                                    loading......\r\n                                </div>\r\n                            }\r\n                            {\r\n                                isPlayerTwoShowed &&\r\n                                <div className={'battle-input-result'}>\r\n                                    <img className={'battle-input-result-image'} src={playerTwoResult.avatar_url}/>\r\n                                    <div className={'battle-input-result-name'}>\r\n                                        {playerTwoResult.login}\r\n                                    </div>\r\n                                    <div className={'battle-input-result-clear'}\r\n                                         onClick={this.doClear.bind(this, 'player2')}>\r\n                                        X\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className={'battle-begin'}>\r\n                    {\r\n                        isPlayerOneShowed && isPlayerTwoShowed &&\r\n                        <button\r\n                            onClick={\r\n                                this.doBattle.bind(this, player1, player2, playerOneResult.followers, playerTwoResult.followers)\r\n                            }>\r\n                            BATTLE\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Battle;\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios'\r\nimport {Spin, Alert, Input} from 'antd'\r\nimport 'font-awesome/less/font-awesome.less';\r\nimport 'react-fontawesome';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {} from '@fortawesome/free-regular-svg-icons'\r\nimport {faFighterJet, faTrophy, faUsers} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Result extends Component {\r\n\r\n    state = {\r\n        player1: '',\r\n        player2: '',\r\n        winner: {},\r\n        loser: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('哎', this)\r\n        let {player1} = window.localStorage\r\n        if (this.props.history.location.state || player1) {\r\n            let {player1, player2, followers1, followers2} = this.props.history.location.state || window.localStorage\r\n            if (followers1 >= followers2) {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        winner: res.data\r\n                    })\r\n                })\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        loser: res.data\r\n                    })\r\n                })\r\n            } else {\r\n                axios.get(`https://api.github.com/users/${player1}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        loser: res.data\r\n                    })\r\n                })\r\n                axios.get(`https://api.github.com/users/${player2}`).then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        winner: res.data\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            this.props.history.push({\r\n                pathname: '/battle'\r\n            })\r\n        }\r\n    }\r\n\r\n    doReset = () => {\r\n        this.setState({player1: '', player2: '', winner: {}, loser: {}}, () => {\r\n            this.props.history.push('/battle')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {winner, loser} = this.state\r\n        console.log('winner', winner)\r\n        console.log('loser', loser)\r\n        return (\r\n            <div className=\"result\">\r\n                <div className={'result-players'}>\r\n                    <div className={'result-player'}>\r\n                        <div className={'result-player-title'}>\r\n                            Winner\r\n                        </div>\r\n                        <div className={'result-player-avatar'}>\r\n                            {\r\n                                winner &&\r\n                                <img src={winner.avatar_url}/>\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-name'}>\r\n                            {\r\n                                winner && winner.login\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-score'}>\r\n                            score:1\r\n                        </div>\r\n                    </div>\r\n                    <div className={'result-player'}>\r\n                        <div className={'result-player-title'}>\r\n                            Loser\r\n                        </div>\r\n                        <div className={'result-player-avatar'}>\r\n                            {\r\n                                loser &&\r\n                                <img src={loser.avatar_url}/>\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-name'}>\r\n                            {\r\n                                loser && loser.login\r\n                            }\r\n                        </div>\r\n                        <div className={'result-player-score'}>\r\n                            score:0\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'reset'} onClick={this.doReset}>\r\n                    Reset\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport axios from 'axios'\nimport Popular from \"./pages/popular\";\nimport Battle from \"./pages/battle\";\nimport Result from \"./pages/result\";\nimport {HashRouter as Router, Route, Redirect, Link, withRouter, Switch} from \"react-router-dom\";\n\nclass App extends Component {\n\n    state = {}\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"git-app\">\n                <Router>\n                    <div className={'links'}>\n                        <Link to={'/'} className={`navigate`}>Popular</Link>\n                        <Link to={'/battle'} className={`navigate`}>Battle</Link>\n                    </div>\n                    {/*<Redirect to={'/popular'}/>*/}\n                    <Switch>\n                        <Route exact path={'/'} component={Popular}/>\n                        <Route path={'/battle'} component={Battle}/>\n                        <Route path={'/result'} component={Result}/>\n                    </Switch>\n\n                </Router>\n            </div>\n        )\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Chess is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}